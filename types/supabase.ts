/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/ingredient": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.ingredient.id"];
          created_at?: parameters["rowFilter.ingredient.created_at"];
          name?: parameters["rowFilter.ingredient.name"];
          recipe_id?: parameters["rowFilter.ingredient.recipe_id"];
          diet?: parameters["rowFilter.ingredient.diet"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["ingredient"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** ingredient */
          ingredient?: definitions["ingredient"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.ingredient.id"];
          created_at?: parameters["rowFilter.ingredient.created_at"];
          name?: parameters["rowFilter.ingredient.name"];
          recipe_id?: parameters["rowFilter.ingredient.recipe_id"];
          diet?: parameters["rowFilter.ingredient.diet"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.ingredient.id"];
          created_at?: parameters["rowFilter.ingredient.created_at"];
          name?: parameters["rowFilter.ingredient.name"];
          recipe_id?: parameters["rowFilter.ingredient.recipe_id"];
          diet?: parameters["rowFilter.ingredient.diet"];
        };
        body: {
          /** ingredient */
          ingredient?: definitions["ingredient"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/recipe": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.recipe.id"];
          name?: parameters["rowFilter.recipe.name"];
          description?: parameters["rowFilter.recipe.description"];
          image?: parameters["rowFilter.recipe.image"];
          steps?: parameters["rowFilter.recipe.steps"];
          created_at?: parameters["rowFilter.recipe.created_at"];
          user_id?: parameters["rowFilter.recipe.user_id"];
          cook_time?: parameters["rowFilter.recipe.cook_time"];
          prep_time?: parameters["rowFilter.recipe.prep_time"];
          portions?: parameters["rowFilter.recipe.portions"];
          diet?: parameters["rowFilter.recipe.diet"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["recipe"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** recipe */
          recipe?: definitions["recipe"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.recipe.id"];
          name?: parameters["rowFilter.recipe.name"];
          description?: parameters["rowFilter.recipe.description"];
          image?: parameters["rowFilter.recipe.image"];
          steps?: parameters["rowFilter.recipe.steps"];
          created_at?: parameters["rowFilter.recipe.created_at"];
          user_id?: parameters["rowFilter.recipe.user_id"];
          cook_time?: parameters["rowFilter.recipe.cook_time"];
          prep_time?: parameters["rowFilter.recipe.prep_time"];
          portions?: parameters["rowFilter.recipe.portions"];
          diet?: parameters["rowFilter.recipe.diet"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.recipe.id"];
          name?: parameters["rowFilter.recipe.name"];
          description?: parameters["rowFilter.recipe.description"];
          image?: parameters["rowFilter.recipe.image"];
          steps?: parameters["rowFilter.recipe.steps"];
          created_at?: parameters["rowFilter.recipe.created_at"];
          user_id?: parameters["rowFilter.recipe.user_id"];
          cook_time?: parameters["rowFilter.recipe.cook_time"];
          prep_time?: parameters["rowFilter.recipe.prep_time"];
          portions?: parameters["rowFilter.recipe.portions"];
          diet?: parameters["rowFilter.recipe.diet"];
        };
        body: {
          /** recipe */
          recipe?: definitions["recipe"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/recipe_ingredient": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.recipe_ingredient.id"];
          recipe_id?: parameters["rowFilter.recipe_ingredient.recipe_id"];
          ingredient_id?: parameters["rowFilter.recipe_ingredient.ingredient_id"];
          amount?: parameters["rowFilter.recipe_ingredient.amount"];
          unit?: parameters["rowFilter.recipe_ingredient.unit"];
          index?: parameters["rowFilter.recipe_ingredient.index"];
          section?: parameters["rowFilter.recipe_ingredient.section"];
          extra_info?: parameters["rowFilter.recipe_ingredient.extra_info"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["recipe_ingredient"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** recipe_ingredient */
          recipe_ingredient?: definitions["recipe_ingredient"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.recipe_ingredient.id"];
          recipe_id?: parameters["rowFilter.recipe_ingredient.recipe_id"];
          ingredient_id?: parameters["rowFilter.recipe_ingredient.ingredient_id"];
          amount?: parameters["rowFilter.recipe_ingredient.amount"];
          unit?: parameters["rowFilter.recipe_ingredient.unit"];
          index?: parameters["rowFilter.recipe_ingredient.index"];
          section?: parameters["rowFilter.recipe_ingredient.section"];
          extra_info?: parameters["rowFilter.recipe_ingredient.extra_info"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.recipe_ingredient.id"];
          recipe_id?: parameters["rowFilter.recipe_ingredient.recipe_id"];
          ingredient_id?: parameters["rowFilter.recipe_ingredient.ingredient_id"];
          amount?: parameters["rowFilter.recipe_ingredient.amount"];
          unit?: parameters["rowFilter.recipe_ingredient.unit"];
          index?: parameters["rowFilter.recipe_ingredient.index"];
          section?: parameters["rowFilter.recipe_ingredient.section"];
          extra_info?: parameters["rowFilter.recipe_ingredient.extra_info"];
        };
        body: {
          /** recipe_ingredient */
          recipe_ingredient?: definitions["recipe_ingredient"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/unit": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.unit.id"];
          long_name?: parameters["rowFilter.unit.long_name"];
          short_name?: parameters["rowFilter.unit.short_name"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["unit"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** unit */
          unit?: definitions["unit"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.unit.id"];
          long_name?: parameters["rowFilter.unit.long_name"];
          short_name?: parameters["rowFilter.unit.short_name"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.unit.id"];
          long_name?: parameters["rowFilter.unit.long_name"];
          short_name?: parameters["rowFilter.unit.short_name"];
        };
        body: {
          /** unit */
          unit?: definitions["unit"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  ingredient: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /** Format: text */
    name: string;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `recipe.id`.<fk table='recipe' column='id'/>
     */
    recipe_id?: number;
    /** Format: text */
    diet: string;
  };
  recipe: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    name: string;
    /** Format: text */
    description?: string;
    /** Format: text */
    image?: string;
    /** Format: jsonb */
    steps: string;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    created_at: string;
    /** Format: text */
    user_id?: string;
    /** Format: interval */
    cook_time?: string;
    /** Format: interval */
    prep_time?: string;
    /** Format: integer */
    portions: number;
    /** Format: text */
    diet: string;
  };
  recipe_ingredient: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `recipe.id`.<fk table='recipe' column='id'/>
     */
    recipe_id: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `ingredient.id`.<fk table='ingredient' column='id'/>
     */
    ingredient_id: number;
    /** Format: real */
    amount: number;
    /**
     * Format: integer
     * @description Note:
     * This is a Foreign Key to `unit.id`.<fk table='unit' column='id'/>
     * @default 1
     */
    unit: number;
    /**
     * Format: integer
     * @default 0
     */
    index: number;
    /** Format: text */
    section?: string;
    /** Format: text */
    extra_info?: string;
  };
  unit: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /** Format: text */
    long_name: string;
    /** Format: text */
    short_name: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description ingredient */
  "body.ingredient": definitions["ingredient"];
  /** Format: bigint */
  "rowFilter.ingredient.id": string;
  /** Format: timestamp with time zone */
  "rowFilter.ingredient.created_at": string;
  /** Format: text */
  "rowFilter.ingredient.name": string;
  /** Format: integer */
  "rowFilter.ingredient.recipe_id": string;
  /** Format: text */
  "rowFilter.ingredient.diet": string;
  /** @description recipe */
  "body.recipe": definitions["recipe"];
  /** Format: bigint */
  "rowFilter.recipe.id": string;
  /** Format: text */
  "rowFilter.recipe.name": string;
  /** Format: text */
  "rowFilter.recipe.description": string;
  /** Format: text */
  "rowFilter.recipe.image": string;
  /** Format: jsonb */
  "rowFilter.recipe.steps": string;
  /** Format: timestamp with time zone */
  "rowFilter.recipe.created_at": string;
  /** Format: text */
  "rowFilter.recipe.user_id": string;
  /** Format: interval */
  "rowFilter.recipe.cook_time": string;
  /** Format: interval */
  "rowFilter.recipe.prep_time": string;
  /** Format: integer */
  "rowFilter.recipe.portions": string;
  /** Format: text */
  "rowFilter.recipe.diet": string;
  /** @description recipe_ingredient */
  "body.recipe_ingredient": definitions["recipe_ingredient"];
  /** Format: bigint */
  "rowFilter.recipe_ingredient.id": string;
  /** Format: integer */
  "rowFilter.recipe_ingredient.recipe_id": string;
  /** Format: integer */
  "rowFilter.recipe_ingredient.ingredient_id": string;
  /** Format: real */
  "rowFilter.recipe_ingredient.amount": string;
  /** Format: integer */
  "rowFilter.recipe_ingredient.unit": string;
  /** Format: integer */
  "rowFilter.recipe_ingredient.index": string;
  /** Format: text */
  "rowFilter.recipe_ingredient.section": string;
  /** Format: text */
  "rowFilter.recipe_ingredient.extra_info": string;
  /** @description unit */
  "body.unit": definitions["unit"];
  /** Format: bigint */
  "rowFilter.unit.id": string;
  /** Format: text */
  "rowFilter.unit.long_name": string;
  /** Format: text */
  "rowFilter.unit.short_name": string;
}

export interface operations {}

export interface external {}
